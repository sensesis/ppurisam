services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: ppurisam_frontend
    networks:
      - ppurisam_network
    volumes:
      - ./Frontend:/app
      - /app/node_modules
      - ./Frontend/.env:/app/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    depends_on:
      - backend
    command: ["npm", "run", "dev"]

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: ppurisam_backend
    networks:
      - ppurisam_network
    volumes:
      - ./Backend:/app/image
      - ./Backend/.env:/app/.env
      - ./Backend/images:/app/images

    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://database:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - TOKEN_SECRET_KEY=${TOKEN_SECRET_KEY}
      - ACCESSTOKEN_PLUSTHOUR=${ACCESSTOKEN_PLUSTHOUR}
      - REFRESHTOKEN_PLUSHOUR=${REFRESHTOKEN_PLUSHOUR}
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_ELASTICSEARCH_USERNAME=elastic
      - SPRING_ELASTICSEARCH_PASSWORD=1234
      - CSR_CLIENT_ID=${CSR_CLIENT_ID}
      - CSR_CLIENT_SECRET=${CSR_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ppurio.api.key=${PPURIO_API_KEY}
      - ppurio.account=${PPURIO_ACCOUNT}
      - ppurio.from=${PPURIO_FROM}
      - ppurio.uri=${PPURIO_URI}
      - ppurio.authKey=${PPURIO_API_KEY}

    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    command: ["java", "-jar", "app.jar"]
  database:
    image: mysql:8.0
    container_name: ppurisam_db
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./Backend/db/ppurisam_data:/var/lib/mysql
    networks:
      - ppurisam_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch-node
      - cluster.name=search-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=1234
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200" # HTTP
      - "9300:9300" # TCP
    networks:
      - ppurisam_network
    healthcheck:
      test:
        ["CMD-SHELL", "curl -u elastic:1234 -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
        elasticsearch-plugin remove analysis-nori || true &&
        elasticsearch-plugin install analysis-nori &&
        elasticsearch"

  nginx:
    image: nginx:latest
    container_name: ppurisam_nginx
    ports:
      - "80:80"
    networks:
      - ppurisam_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: ppurisam_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Backend/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ppurisam_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
    extra_hosts:
      host.docker.internal: host-gateway

  grafana:
    image: grafana/grafana:latest
    container_name: ppurisam_grafana
    ports:
      - "3100:3100"
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    networks:
      - ppurisam_network
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_HTTP_PORT=3100


networks:
  ppurisam_network:
    driver: bridge

volumes:
  es_data:
  ppurisam_data:
